services:
  database:
    image: postgres:latest
    hostname: ${DB_HOSTNAME}
    networks:
      - talos-network
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes: 
      - ./volumes/database:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    command: -p ${DB_PORT}
  rabbitmq:
    image: rabbitmq:3.12.0-management
    hostname: ${RABBITMQ_HOSTNAME}
    networks:
      - talos-network
    ports:
      - ${RABBITMQ_SERVICE_PORT}:${RABBITMQ_SERVICE_PORT}
      - ${RABBITMQ_MANAGEMENT_PORT}:${RABBITMQ_MANAGEMENT_PORT}
    volumes:
        - ./volumes/rabbit:/var/lib/rabbitmq/
  rescan-producer:
    build:
      context: .
      dockerfile: docker-images/rescan-producer/Dockerfile
    networks:
      - talos-network
    environment:
      - TALOS_COMPONENT_NAME=rescan-producer
    env_file:
      - .env
    depends_on:
      - database
      - rabbitmq
  subreddit-rescanner:
    build:
      context: .
      dockerfile: docker-images/subreddit-rescanner/Dockerfile
    networks:
      - talos-network
    environment:
      - TALOS_COMPONENT_NAME=subreddit-rescanner
    env_file:
      - .env
    depends_on:
      - database
      - rabbitmq
  post-rescanner:
    build:
      context: .
      dockerfile: docker-images/post-rescanner/Dockerfile
    networks:
      - talos-network
    environment:
      - TALOS_COMPONENT_NAME=post-rescanner
    env_file:
      - .env
    depends_on:
      - database
      - rabbitmq
networks:
  talos-network:
    driver: bridge